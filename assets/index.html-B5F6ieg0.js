import{_ as e,c as l,b as i,o as s}from"./app-B_RBuSxH.js";const n={};function t(o,a){return s(),l("div",null,a[0]||(a[0]=[i('<h2 id="程序" tabindex="-1"><a class="header-anchor" href="#程序"><span>程序</span></a></h2><ul><li>计算机执行某些操作或解决某个问题而编写的<strong>一系列有序指令的集合</strong></li></ul><h2 id="java-api文档" tabindex="-1"><a class="header-anchor" href="#java-api文档"><span>Java API文档</span></a></h2><ul><li><a href="https://doc.qzxdp.cn/jdk/17/zh/api/index.html" target="_blank" rel="noopener noreferrer">JDK17中文文档</a></li><li><a href="https://doc.qzxdp.cn/jdk/20/zh/api/index.html" target="_blank" rel="noopener noreferrer">JDK20中文文档</a></li></ul><h2 id="java的特点" tabindex="-1"><a class="header-anchor" href="#java的特点"><span>Java的特点</span></a></h2><ul><li><mark>面向对象</mark>（OOP, Object-Oriented Program）</li><li><mark>健壮的</mark>（强类型机制、异常处理、垃圾回收等）</li><li><mark>跨平台</mark>（一次编译，到处运行）</li><li><mark>解释型语言</mark><ul><li>解释型语言，编译后的代码，不能直接被机器执行，需要解释器来执行，如<code>Java, Javascript, PHP</code></li><li>编译型语言：编译后的代码, 可以直接被机器执行，如<code>C/C++</code></li></ul></li></ul><h2 id="java的运行机制及运行过程" tabindex="-1"><a class="header-anchor" href="#java的运行机制及运行过程"><span>Java的运行机制及运行过程</span></a></h2><h3 id="跨平台性" tabindex="-1"><a class="header-anchor" href="#跨平台性"><span>跨平台性</span></a></h3><ul><li>一次编译，到处运行</li></ul><h3 id="运行过程" tabindex="-1"><a class="header-anchor" href="#运行过程"><span>运行过程</span></a></h3><p><code>Hello.java</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 编译javac <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> <code>Hello.class</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> 运行java <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">→</span></span></span></span> JVM for Windows/Linux/Mac</p><h3 id="java虚拟机" tabindex="-1"><a class="header-anchor" href="#java虚拟机"><span>Java虚拟机</span></a></h3><ul><li><strong>JVM</strong>（Java Virtual Machine）是一个虚拟的计算机，具有指令集并使用不同的存储区域。负责执行指令，管理数据、内存、寄存器，包含在JDK 中</li><li>不同的平台（Windows、Linux、Mac···）有不同的虚拟机</li></ul><h2 id="jdk" tabindex="-1"><a class="header-anchor" href="#jdk"><span>JDK</span></a></h2><div class="hint-container important"><p class="hint-container-title">重要</p><ul><li><strong>JDK</strong>（Java Development Kit），Java开发工具包</li><li>JDK = JRE + Java的开发工具集（Javac、Java编译工具等）</li><li>JRE = JVM + Java的核心类库</li></ul></div><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h2><h3 id="java数据类型" tabindex="-1"><a class="header-anchor" href="#java数据类型"><span>Java数据类型</span></a></h3><ul><li><mark>基本数据类型</mark><ul><li>数值型 <ul><li><code>byte</code>、<code>short</code>、<code>int</code>、<code>long</code></li><li><code>float</code>、<code>double</code></li></ul></li><li>字符型<code>char</code></li><li>布尔型<code>boolean</code></li></ul></li><li><mark>引用数据类型</mark><ul><li>类<code>class</code></li><li>接口<code>interface</code></li><li>数组<code>[]</code></li></ul></li></ul><h3 id="基本数据类型转换" tabindex="-1"><a class="header-anchor" href="#基本数据类型转换"><span>基本数据类型转换</span></a></h3><ul><li>自动类型转换</li><li>强制类型转换</li><li>基本数据类型和<code>String</code>类型的转换</li></ul><h2 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h2><ul><li>算术运算符</li><li>赋值运算符</li><li>关系运算符</li><li>逻辑运算符</li><li>位运算符</li><li>三元运算符</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>短路与<code>&amp;&amp;</code>：第一个条件为false，则第二个条件不会判断，最终结果为false，效率高</li><li>逻辑与<code>&amp;</code>：不论第一个条件是否为false，第二个条件都要判断，效率低</li><li>短路或<code>||</code>：第一个条件为true，则则第二个条件不会判断，最终结果为true，效率高</li><li>逻辑或<code>|</code>：不论第一个条件是否为true，第二个条件都要判断，效率低</li></ul></div><h3 id="位运算符" tabindex="-1"><a class="header-anchor" href="#位运算符"><span>位运算符</span></a></h3><ul><li>按位与<code>&amp;</code></li><li>按位或<code>|</code></li><li>按位异或<code>^</code></li><li>按位取反<code>~</code></li><li>算数右移<code>&gt;&gt;</code>：低位溢出，符号位不变，用符号位补溢出的高位</li><li>算数左移<code>&lt;&lt;</code>：符号位不变，低位补0</li><li>逻辑右移（无符号右移）<code>&gt;&gt;&gt;</code>：低位溢出，高位补0</li></ul><h3 id="进制转换" tabindex="-1"><a class="header-anchor" href="#进制转换"><span>进制转换</span></a></h3><ul><li>二进制转 X 进制</li><li>X 进制转二进制</li></ul><h3 id="原码、反码和补码" tabindex="-1"><a class="header-anchor" href="#原码、反码和补码"><span>原码、反码和补码</span></a></h3><div class="hint-container important"><p class="hint-container-title">重要</p><ul><li>二进制的最高位是符号位: 0表示正数,1表示负数</li><li>正数的原码，反码，补码都一样(三码合一)</li><li>负数的反码=它的原码符号位不变，其它位取反</li><li>负数的补码=它的反码+1，负数的反码=负数的补码-1</li><li>0的反码，补码都是0</li><li>java中的数都是有符号的在计算机运算的时候，都是以补码的方式来运算的</li><li>当我们看运算结果的时候，要看它的原码</li></ul></div><h2 id="程序控制结构" tabindex="-1"><a class="header-anchor" href="#程序控制结构"><span>程序控制结构</span></a></h2><ul><li><code>if-else</code></li><li><code>switch</code></li><li><code>for</code></li><li><code>while</code></li><li><code>do while</code></li><li><code>break</code></li><li><code>continue</code></li><li><code>return</code></li></ul><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h2><ul><li>数组的定义：<br><code>数据类型[] 数组名 = new 数据类型[数组大小]</code></li></ul>',33)]))}const r=e(n,[["render",t],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/java_lang/3twy3kal/","title":"Java概述","lang":"zh-CN","frontmatter":{"title":"Java概述","createTime":"2025/03/02 22:11:50","icon":"mdi-cube-send","permalink":"/java_lang/3twy3kal/"},"headers":[],"readingTime":{"minutes":2.66,"words":799},"git":{"updatedTime":1741013408000,"contributors":[{"name":"ryuyal","username":"ryuyal","email":"helloliu777@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/ryuyal?v=4","url":"https://github.com/ryuyal"}]},"filePathRelative":"notes/back_end/java_lang/basic/01.25-03-02-java概述.md","bulletin":false}');export{r as comp,d as data};
